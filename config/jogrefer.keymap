#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <input/processors.dtsi>
#include <definitions.dtsi>
#include <jogrefer.overlay>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20
#include <dt-bindings/zmk/pointing.h>

/ {
	behaviors {
		&mt {
			tapping-term-ms = <160>;
		};
		&lt {
			tapping-term-ms = <160>;
		};
	};

	keymap {
		compatible = "zmk,keymap";
		retro-tap;

		default_layer {
				/* ╭────────────────────╮   ╭────────────────────╮
					│  ×  1  2  3  4  5	│   │  6  7  8  9  0  \  │
					│  ⭾  F  M  N  G  X	╰───╯  W  V  B  P  Y  -  │
					│  ⇪  D  T  R  S  L  Ç   m  U  A  E  O  I  +  │
					│  ´  Z  Q  H  C  K  [   <  Ñ  J  ,  .  /  ⇪  │
					│  m  ⌃  ⌥  ⌘  ␣  ←  ]   ⌘  ↩︎  ␣  ←  ↑  ↓  →  │
					╰─────────────────────────────────────────────╯ */
			bindings = <
				&kp ESC              &kp N1     &kp N2    &kp N3    &kp N4     &kp N5                               &kp N6      &kp N7     &kp N8      &kp N9    &kp N0     &kp NUBS
				&kp TAB              &kp F      &kp M     &kp N     &kp G      &kp X                                &kp W       &kp V      &kp B       &kp P     &kp Y      &kp MINUS
				&mt LSHIFT CAPSLOCK  &kp D      &kp T     &kp R     &kp S      &kp L          &kp TILDE  &tog 2     &kp U       &kp A      &kp E       &kp O     &kp I      &kp PLUS
				&kp GRAVE            &kp Z      &kp Q     &kp H     &kp C      &kp K          &kp LBKT   &kp EQUAL  &kp NTILDE  &kp J      &kp COMMA  &kp DOT    &kp SLASH  &kp RSHIFT
				&lt 1 GLOBE          &kp LCTRL  &kp LALT  &kp LCMD  &kp SPACE  &kp BACKSPACE  &kp RBKT   &kp RCMD   &kp ENTER   &kp SPACE  &kp LEFT    &kp UP    &kp DOWN   &kp RIGHT
			>;
		};

		function_layer {		// 1
			bindings = <
				&kp F12         &kp F1             &kp F2        &kp F3            &kp F4      &kp F5                   &kp F6           &kp F7        &kp F8     &kp F9      &kp F10          &kp F11
				&kp SCROLLLOCK  &kp C_VOL_UP       &kp C_BRI_UP  &trans            &trans      &trans                   &kp PRINTSCREEN  &kp KP_N7     &kp KP_N8  &kp KP_N9   &trans           &trans
				&trans          &kp C_VOLUME_DOWN  &kp C_BRI_DN  &trans            &trans      &trans   &to 3   &to 2   &kp PAUSE_BREAK  &kp KP_N4     &kp KP_N5  &kp KP_N6   &kp KP_MULTIPLY  &trans
				&trans          &kp C_MUTE         &kp C_NEXT    &kp C_PLAY_PAUSE  &kp C_PREV  &trans   &trans  &trans  &kp KP_NUMLOCK   &kp KP_N1     &kp KP_N2  &kp KP_N3   &trans           &kp INSERT
				&trans          &trans             &trans        &trans            &trans      &kp DEL  &trans  &trans  &trans           &kp KP_EQUAL  &kp HOME   &kp PAGE_UP &kp PAGE_DOWN    &kp END
			>;
		};

		bt_layer {		// 2
			&mkp_input_listener {
				input-processors = <&zip_temp_layer 2 2000>;
			};
			&mmv_input_listener {	//Input Processors
				input-processors = <&zip_temp_layer 2 2000>;
			};
			&mmv {	//Mouse Move
				x-input-code = <INPUT_REL_X>;
				y-input-code = <INPUT_REL_Y>;
				time-to-max-speed-ms = <800>;
				acceleration-exponent = <1.12>;
			};
			&msc {	//Mouse Scroll
				x-input-code = <INPUT_REL_HWHEEL>;
				y-input-code = <INPUT_REL_WHEEL>;
				time-to-max-speed-ms = <400>;
				acceleration-exponent = <1.1>;
			};
			bindings = <
				&to 0                &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4                       &none      &none           &none           &none           &none            &none
				&kp TAB              &bt BT_NXT     &bt BT_PVR     &bt BT_CLR     &out OUT_BLE   &out OUT_USB                       &mkp MB4   &mkp MB1        &mkp MB3        &mkp MB2        &mkp MB5         &none
				&mt LSHIFT CAPSLOCK  &none          &none          &none          &none          &none          &to 0     &trans    &none      &mmv MOVE_LEFT  &mmv MOVE_UP    &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none
				&none                &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &none     &none     &none      &msc SCRL_LEFT  &msc SCRL_UP    &msc SCRL_DOWN  &msc SCRL_RIGHT  &kp RSHIFT
				&trans               &kp LCTRL      &kp LALT       &kp LCMD       &kp SPACE      &kp DEL        &kp RBKT  &kp RCMD  &kp ENTER  &kp SPACE       &kp LEFT        &kp UP          &kp DOWN         &kp RIGHT
			>;
		};

		alt_layer {		// 3 (Qwerty)
			bindings = <
				&kp ESC              &kp N1     &kp N2    &kp N3    &kp N4     &kp N5                               &kp N6     &kp N7     &kp N8      &kp N9    &kp N0      &kp NUBS
				&kp TAB              &kp Q      &kp W     &kp E     &kp R      &kp T                                &kp Y      &kp U      &kp I       &kp O     &kp P       &kp MINUS
				&mt LSHIFT CAPSLOCK  &kp A      &kp S     &kp D     &kp F      &kp G          &to 0      &tog 2     &kp H      &kp J      &kp K       &kp L     &kp NTILDE  &kp PLUS
				&kp GRAVE            &kp Z      &kp X     &kp C     &kp V      &kp B          &kp LBKT   &kp EQUAL  &kp N      &kp M      &kp COMMA   &kp DOT   &kp SLASH   &kp RSHIFT
				&lt 1 GLOBE          &kp LCTRL  &kp LALT  &kp LCMD  &kp SPACE  &kp BACKSPACE  &kp RBKT   &kp RCMD   &kp ENTER  &kp SPACE  &kp LEFT    &kp UP    &kp DOWN    &kp RIGHT
			>;
		};
	};
};